# Generated by roxygen2: do not edit by hand

export(get.pi)
export(get.pi.a.clustsurvey.hh.wts)
export(get.pi.a.clustsurvey.wts)
export(get.pi.a.clustsurvey.wts.bootstrap)
export(get.pi.a.typed.clustsurvey.hh.wts)
export(get.pi.a.typed.clustsurvey.wts)
export(get.pi.b.clustsurvey.hh.wts)
export(get.pi.b.clustsurvey.wts)
export(get.pi.b.clustsurvey.wts.bootstrap)
export(get.pi.b.typed.clustsurvey.hh.wts)
export(get.pi.b.typed.clustsurvey.wts)
export(get.pi.bootstrap)
export(get.pi.ci)
export(get.pi.clustsurvey)
export(get.pi.clustsurvey.bootstrap)
export(get.pi.clustsurvey.ci)
export(get.pi.clustsurvey.hh.wts.window)
export(get.pi.clustsurvey.window)
export(get.pi.clustsurvey.wts.window)
export(get.pi.hh.typed)
export(get.pi.permute)
export(get.pi.typed)
export(get.pi.typed.bootstrap)
export(get.pi.typed.gridcells)
export(get.pi.typed.permute)
export(get.pi.typed.survey)
export(get.pi.typed.wts)
export(get.pi.typed.wts.bootstrap)
export(get.pi.typed.wts.ci)
export(get.pi.typed.wts.permute)
export(get.tau)
export(get.tau.bootstrap)
export(get.tau.ci)
export(get.tau.clustsurvey)
export(get.tau.clustsurvey.bootstrap)
export(get.tau.clustsurvey.ci)
export(get.tau.clustsurvey.hh.wts)
export(get.tau.clustsurvey.hh.wts.window)
export(get.tau.clustsurvey.window)
export(get.tau.clustsurvey.wts)
export(get.tau.clustsurvey.wts.bootstrap)
export(get.tau.clustsurvey.wts.ci)
export(get.tau.clustsurvey.wts.window)
export(get.tau.hh.typed)
export(get.tau.hh.typed.bootstrap)
export(get.tau.permute)
export(get.tau.typed)
export(get.tau.typed.bootstrap)
export(get.tau.typed.bootstrap.parallel)
export(get.tau.typed.clustsurvey.hh.wts)
export(get.tau.typed.clustsurvey.wts)
export(get.tau.typed.permute)
export(get.tau.typed.survey)
export(get.tau.typed.wts)
export(get.tau.typed.wts.bootstrap)
export(get.tau.typed.wts.bootstrap.parallel)
export(get.tau.typed.wts.ci)
export(get.tau.typed.wts.permute)
export(get.theta)
export(get.theta.bootstrap)
export(get.theta.ci)
export(get.theta.permute)
export(get.theta.typed)
export(get.theta.typed.bootstrap)
export(get.theta.typed.permute)
export(get.theta.typed.survey)
import(doParallel)
import(foreach)
useDynLib(IDSpatialStats, .registration=TRUE)
